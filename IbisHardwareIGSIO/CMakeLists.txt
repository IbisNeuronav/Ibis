# Hardware module is a Qt plugin - this flags is needed to build static plugins properly
add_definitions( -DQT_STATICPLUGIN )

#================================
# Includes dir for other Ibis libs
#================================
include_directories( ${IBISLIB_INCLUDE_DIR} )

#================================
# Find OpenIGTLink, OpenIGTLinkIO
#================================
find_package(OpenIGTLink REQUIRED)
find_package( OpenIGTLinkIO REQUIRED )

# Define sources
set( IbisHardwareIgsioSrc ibishardwareIGSIO.cpp )
set( IbisHardwareIgsioHdr )
set( IbisHardwareIgsioHdrMoc ibishardwareIGSIO.h )
set( IbisHardwareIgsioUi )

# moc Qt source file without a ui file
qt5_wrap_cpp( IbisHardwareIgsioMoc ${IbisHardwareIgsioHdrMoc} )

# Generate code for .ui files -> ui_xxx.h
qt5_wrap_ui( IbisHardwareIgsioUiHdr ${IbisHardwareIgsioUi} )

#================================
# Define output
#================================
include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )           # so that non-generated gui files can include main files
include_directories( ${CMAKE_CURRENT_BINARY_DIR} )           # for files generated by Qt
set( IbisHardwareIgsioSrcAll ${IbisHardwareIgsioSrc} ${IbisHardwareIgsioHdr} ${IbisHardwareIgsioHdrMoc} ${IbisHardwareIgsioMoc} ${IbisHardwareIgsioUiHdr} )
add_library( IbisHardwareIGSIO ${IbisHardwareIgsioSrcAll} )
target_link_libraries( IbisHardwareIGSIO PUBLIC ${OpenIGTLinkIO_LIBRARIES} ${OpenIGTLink_LIBRARIES} ${VTK_LIBRARIES} )

# append necessary libraries to the list for ibis to link
set( HardwareModulesLibs ${HardwareModulesLibs} IbisHardwareIGSIO PARENT_SCOPE )

IF( CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )
  SET_TARGET_PROPERTIES( IbisHardwareIGSIO PROPERTIES COMPILE_FLAGS "-fPIC")
ENDIF( CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )
